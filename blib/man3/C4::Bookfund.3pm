.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::Bookfund 3"
.TH C4::Bookfund 3 "2010-12-10" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Bookfund \- Koha functions for dealing with bookfund, currency & money.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use C4::Bookfund;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
the functions in this modules deal with bookfund, currency and money.
They allow to get and/or set some informations for a specific budget or currency.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "GetBookFund"
.IX Subsection "GetBookFund"
\&\f(CW$dataaqbookfund\fR = &GetBookFund($bookfundid);
.PP
this function get the bookfundid, bookfundname, the bookfundgroup,  the branchcode
from aqbookfund table for bookfundid given on input arg.
return: 
\&\f(CW$dataaqbookfund\fR is a hashref full of bookfundid, bookfundname, bookfundgroup,
and branchcode.
.PP
\fIGetBookFundsId\fR
.IX Subsection "GetBookFundsId"
.PP
\&\f(CW$sth\fR = &GetBookFundsId
Read on aqbookfund table and execute a simple \s-1SQL\s0 query.
.PP
return:
\&\f(CW$sth\fR\->execute. Don't forget to fetch row from the database after using
this function by using, for example, \f(CW$sth\fR\->fetchrow_hashref;
.PP
\&\f(CW@results\fR is an array of id existing on the database.
.PP
\fIGetBookFunds\fR
.IX Subsection "GetBookFunds"
.PP
\&\f(CW@results\fR = &GetBookFunds;
.PP
Returns a list of all book funds.
.PP
\&\f(CW@results\fR is an array of references-to-hash, whose keys are fields from the aqbookfund and aqbudget tables of the Koha database. Results are ordered
alphabetically by book fund name.
.PP
\fIGetCurrencies\fR
.IX Subsection "GetCurrencies"
.PP
\&\f(CW@currencies\fR = &GetCurrencies;
.PP
Returns the list of all known currencies.
.PP
\&\f(CW$currencies\fR is a array; its elements are references-to-hash, whose
keys are the fields from the currency table in the Koha database.
.PP
\fIGetBookFundBreakdown\fR
.IX Subsection "GetBookFundBreakdown"
.PP
( \f(CW$spent\fR, \f(CW$comtd\fR ) = &GetBookFundBreakdown( \f(CW$id\fR, \f(CW$start\fR, \f(CW$end\fR );
.PP
returns the total comtd & spent for a given bookfund, and a given year
used in acqui\-home.pl
.PP
\fINewBookFund\fR
.IX Subsection "NewBookFund"
.PP
&NewBookFund(bookfundid, bookfundname, branchcode);
.PP
this function create a new bookfund into the database.
.PP
\fIModBookFund\fR
.IX Subsection "ModBookFund"
.PP
&ModBookFund($bookfundname,$bookfundid,$current_branch, \f(CW$branchcode\fR)
.PP
This function updates the bookfundname and the branchcode in the aqbookfund table.
.PP
\fISearchBookFund\fR
.IX Subsection "SearchBookFund"
.PP
\&\f(CW@results\fR = SearchBookFund(
        \f(CW$bookfundid\fR,$filter,$filter_bookfundid,
        \f(CW$filter_bookfundname\fR,$filter_branchcode);
.PP
this function searchs among the bookfunds corresponding to our filtering rules.
.PP
\fIModCurrencies\fR
.IX Subsection "ModCurrencies"
.PP
&ModCurrencies($currency, \f(CW$newrate\fR);
.PP
Sets the exchange rate for \f(CW$currency\fR to be \f(CW$newrate\fR.
.PP
\fICountbookfund\fR
.IX Subsection "Countbookfund"
.PP
\&\f(CW$number\fR = Countbookfund($bookfundid);
.PP
this function count the number of bookfund with id given on input arg.
return :
the result of the \s-1SQL\s0 query as a number.
.PP
\fIConvertCurrency\fR
.IX Subsection "ConvertCurrency"
.PP
\&\f(CW$foreignprice\fR = &ConvertCurrency($currency, \f(CW$localprice\fR);
.PP
Converts the price \f(CW$localprice\fR to foreign currency \f(CW$currency\fR by
dividing by the exchange rate, and returns the result.
.PP
If no exchange rate is found, \f(CW&ConvertCurrency\fR assumes the rate is one
to one.
.PP
\fIDelBookFund\fR
.IX Subsection "DelBookFund"
.PP
&DelBookFund($bookfundid);
this function delete a bookfund which has \f(CW$bokfundid\fR as parameter on aqbookfund table and delete the approriate budget.
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Developement team <info@koha.org>
